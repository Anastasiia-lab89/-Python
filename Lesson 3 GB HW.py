# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.


def division_func(n_1, n_2):
    return round(n_1 / n_2, 2)


try:
    print(division_func(float(input('Введите первое число (делимое): ')),
                        float(input('Введите второе число (делитель): '))))
except ZeroDivisionError:
    print('Деление на ноль!')
except ValueError:
    print('Необходимо ввести число!')


# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

# --------------------------Решение с именованными аргументами:----------------------


def person_info(name, surname, year, city, e_mail, phone):
    print(name, surname, year, city, e_mail, phone)


person_info(city="Spb", phone=89046440310, name='Ana', surname="Anaeva", year=1989, e_mail="ana@mail.ru")


# --------------------------Решение с *kwargs----------------------------------------
# Вариант 1:


def person_info(**kwargs):
    for val in kwargs.values():
        print(val, end=' ')


person_info(city="Spb", phone=89046440310, name='Ana', surname="Anaeva", year=1989, e_mail="ana@mail.ru")


# Вариант 2:


def person_info(**kwargs):
    print(' '.join(kwargs.values()))


person_info(city="Spb", phone='89046440310', name='Ana', surname="Anaeva", year='1989', e_mail="ana@mail.ru")


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.


def my_func(n_1, n_2, n_3):
    return max((n_1 + n_2), (n_2 + n_3), (n_1 + n_3))


print(my_func(5, 40, 3))


# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

# -----------------------Первый способ------------------


def my_func(x, y):
    """Возведение числа в отрицательную степень"""
    return round(1 / (x ** abs(y)), 3)


print(my_func(5, -2))


# ----------------------Второй способ-------------------


def my_func(x, y):
    res = 1
    for _ in range(1, abs(y) + 1):
        res = 1 / x * res
    return round(res, 3)


print(my_func(3, -3))

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.


def make_list(some_str: str) -> list:
    """Приведение строки к списку"""
    return some_str.split()


def make_int(some_str: str) -> int:
    """Приведение строки к типу целое число"""
    return int(some_str)


total_sum = 0
number = None
try:
    while number != '=':
        for number in make_list(input('Введите числа через пробел, для завершения программы введите знак "=" : ')):
            if number == '=':
                break
            number = make_int(number)
            total_sum += number
        print(f' Общая сумма введенных чисел: {total_sum}')
except ValueError:
    print('Необходимо ввести целое число, либо знак "="')
finally:
    print(f'Сумма всех введенных чисел равна {total_sum}')


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().


def int_func(word):
    print(word.title())


int_func(input('Please, input phrase: '))


# ----------------Усложненный вариант----------------


def int_func(word):
    """Преобразует первую букву в каждом слове в заглавную, остальные буквы остаются как есть"""
    new_word = [w[0].title() + w[1: len(w)] for w in word.split()]
    print(' '.join(new_word))


int_func(input('Please, input phrase: '))
