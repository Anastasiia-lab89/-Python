# 1) Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных свидетельствует пустая строка.
# 2) Создать текстовый файл (не программно), сохранить в нем несколько строк,
# выполнить подсчет количества строк, количества слов в каждой строке.

with open('user.txt', 'w', encoding='utf-8') as f:
    while True:
        content = [input('Введите свои данные: '), '\n']
        if '' in content:
            break
        f.writelines(content)
# -----------------------------------1 Вариант решения 2-го задания -----------------------------------
with open('user.txt', 'r', encoding='utf-8') as f:
    content = f.readlines()
    print(f'Вы ввели {len(content)} строки.')
    i = 1
    for line in content:
        words_num = line.count(' ') + 1  # Считаем количество слов в строке (слов больше чем пробелов на 1)
        # Считаем количество символов в строке (длина строки с пробелами - (количество пробелов + 1(знак переноса на другую строку))
        print(f'В(о) {i} - й строке {words_num} слов(а/о) и {len(line) - words_num} символов.')
        i += 1
# ----------------------------------2 вариант решения 2-го задания------------------------------
with open('user.txt', 'r', encoding='utf-8') as f:
    i = 1
    for line in f:
        phrase = line.split()
        word_length = 0
        for word in phrase:
            word_length += len(word)
        print(f'В(о) {i} - й строке {len(phrase)} слов(а/о) и {word_length} символов.')
        i += 1

# 3) Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов (не менее 10 строк).
# Определить, кто из сотрудников имеет оклад менее 20 тыс.,
# вывести фамилии этих сотрудников. Выполнить подсчет средней величины дохода сотрудников.
# Пример файла:
# Иванов 23543.12
# Петров 13749.32

with open('text.txt', 'r', encoding='utf-8') as f:
    total_salary = 0
    empl_number = 0
    for line in f:
        content = line.split()  # Формируется построчный список [фамилия, оклад]
        if float(content[1]) < 20000.00:
            print(f'Оклад менее 20 000,00 получает {content[0]}')
        total_salary += float(content[1])  # Счетчик на общую сумму з/платы
        empl_number += 1  # Счетчик на количество сотрудников
    print(f'Средний доход сотрудников равен: {round(total_salary / empl_number, 2)}')

# 4) Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские. Новый блок строк должен записываться в новый текстовый файл.

numbers = dict(One='Один', Two='Два', Three='Три', Four='Четыре')

with open('text_4.txt', 'r', encoding='utf-8') as f:
    file_info = [line.split() for line in f]  # из файла каждую строку преобразуем в список и записываем в новый список строк
    for i in range(0, len(file_info)):
        file_info[i].insert(0, numbers[file_info[i].pop(0)])  # Меняем английские слова на русские

with open('text_4_1.txt', 'w', encoding='utf-8') as new_f:
    for i in range(0, len(file_info)):
        new_f.write(' '.join(file_info[i]))
        new_f.write('\n')

# 5) Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.

while True:
    with open('text_5.txt', 'w', encoding='utf-8') as f:
        numbers = f.write(input('Введите числа через пробел или нажмите Enter для завершения программы: '))
        if numbers == 0:
            break
    with open('text_5.txt', 'r', encoding='utf-8') as f:
        for line in f:
            content = map(int, line.split())
        print(f'Сумма введенных чисел равна: {sum(content)}')

# 6) Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие лекционных,
# практических и лабораторных занятий по этому предмету и их количество.
# Важно, чтобы для каждого предмета не обязательно были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.

my_dict = {}
with open('text_6.txt', 'r', encoding='utf-8') as f:
    my_list = [line.split() for line in f]  # Читаем файл построчно и формируем список из строк
    for info in my_list:
        res = 0
        if '—' in info:
            info.remove('—')  # Из каждой строки убираем прочерки
        for i in info:
            num = i.split('(')  # Каждый элемент списка формируем в новый список с разделителем, чтобы выделить число
            for j in num:
                if j.isdigit():  # Проверяем, является ли элемент числом
                    res += int(j)
        my_dict[info[0][:-1]] = res  # Записываем в словарь значение по срезу и общий результат по каждой строк из файла
print(my_dict)

# 7) Создать вручную и заполнить несколькими строками текстовый файл,
# в котором каждая строка должна содержать данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1   ООО   10000   5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
# Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
import json
my_dict = {}
my_list = []

with open('text_7.txt', 'r', encoding='utf-8') as f:
    total_profit = 0
    i = 0
    for line in f:
        content = line.split()
        profit = int(content[2]) - int(content[3])
        if profit > 0:
            print(f'Прибыль компании {content[0]} составляет {profit}')
            i += 1
            total_profit += profit
            my_dict[content[0]] = profit
        else:
            print(f'Убыток компании {content[0]} составляет {abs(profit)}')
            my_list.append({f'Убыток компании {content[0]}': abs(profit)})
    average_profit = round(total_profit/i)
    print(f'Средняя прибыль компаний составляет {average_profit}')
    my_list.append({'average_profit': average_profit})

my_list.append(my_dict)
print(my_list)

with open('file.json', 'w', encoding='utf-8') as f:
    json.dump(my_list, f, indent=4, ensure_ascii=False)
